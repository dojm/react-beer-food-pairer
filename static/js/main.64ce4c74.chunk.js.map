{"version":3,"sources":["components/Header.js","components/Input.js","components/Message.js","components/Beer.js","components/Output.js","components/Loader.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Input","_ref","foodInput","handleSubmit","handleChange","id","onSubmit","className","htmlFor","type","name","placeholder","onChange","Message","errorMessage","Beer","abv","img","foodPairing","src","Output","outputList","output","map","beer","i","components_Beer","key","image_url","food_pairing","Loader","class","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validate","foodQuery","state","regexResult","test","setState","isLoaded","onHandleChange","e","defineProperty","target","value","console","log","preventDefault","setTimeout","fetch","concat","then","res","json","data","length","catch","error","loading","components_Output","components_Loader","components_Header","components_Input","components_Message","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64ce4c74.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return(\n    <div>\n      <h1>Food+BrewDog Beer</h1>\n\n      <p>Wondering what beer would go well with your meal?</p>\n      <p>Just enter in what foods you're eating to find a recommended beer pairing.</p>  \n    </div>\n  );  \n}\n\nexport default Header;","import React from 'react';\n\nconst Input = ({foodInput, handleSubmit, handleChange}) => {\n\n  return (     \n    <form id=\"form\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"food-input\">Enter foods</label>\n        <div id=\"validation-output\"></div>\n        <input type=\"text\" className=\"form-control form-control-sm\" id=\"food-input\" name=\"foodInput\" placeholder=\"What are you eating?\" onChange={handleChange} />\n      </div>\n          \n      <button type=\"submit\" className=\"btn btn-primary\">Find my beer!</button>\n    </form>\n    );\n}\n\nexport default Input;","import React from 'react';\n\nconst Message = ({errorMessage}) => {\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 offset-sm-1\" id=\"message\">\n        {errorMessage}\n      </div>\n    </div>\n  );\n}\n\nexport default Message;","import React from 'react';\n\nconst Beer = ({name, abv, img, foodPairing}) => {\n  return(\n    <ul>\n      <li><img src={img} /></li>\n      <li>{name}</li>\n      <li>ABV: {abv}</li>\n      <li>This beer is great with:\n        <ul className=\"food-list\">\n          <li>{foodPairing[0]}</li>\n          <li>{foodPairing[1]}</li>\n          <li>{foodPairing[2]}</li>\n        </ul>\n      </li>\n    </ul>\n  );\n}\n\nexport default Beer;","import React from 'react';\nimport Beer from './Beer'\n\nconst Output = ({output}) => {\n  const outputList = output.map((beer, i) => {\n    return(\n      <Beer \n        key={i+i}\n        name={beer.name}\n        img={beer.image_url}\n        abv={beer.abv}\n        foodPairing={beer.food_pairing}\n      />\n      \n    );\n  });\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-10 offset-sm-1\" id=\"output\">\n        <div>{outputList}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Output;","import React from 'react';\n\nconst Loader = () => {\n  return(\n    <div className=\"row\">\n      <div className=\"col-sm-10 offset-sm-1 d-flex justify-content-center\">\n        <div class=\"spinner\">\n          <div class=\"bounce1\"></div>\n          <div class=\"bounce2\"></div>\n          <div class=\"bounce3\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Input from './components/Input';\nimport Message from './components/Message';\nimport Output from './components/Output';\nimport Loader from './components/Loader';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      foodInput: '',\n      output: [],\n      isLoaded: true,\n      errorMessage: ''\n    }\n  }\n\n  validate = () => {\n    let foodQuery = this.state.foodInput;\n    const regex = /^[A-Z]+$/i;\n    let regexResult = regex.test(foodQuery);\n\n    if(!this.state.foodInput) {\n      this.setState({\n        errorMessage: 'Please enter a query',\n        isLoaded: true,\n      });\n      return false;\n    }\n\n    if(regexResult === false) {\n      this.setState({\n        errorMessage: 'Please enter alphabetical characters only',\n        isLoaded: true,\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  onHandleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(e.target.value)\n  }\n  \n  onSubmit = (e) => {\n    e.preventDefault();\n    \n    let foodQuery = this.state.foodInput;\n    this.setState({\n      isLoaded: false,\n      errorMessage: '',\n      output: []\n    });\n\n    const isValid = this.validate();\n\n    if(isValid) {\n      const getResults = () => {\n        fetch(`https://api.punkapi.com/v2/beers?food=${foodQuery}`)\n        .then(\n          res => {\n            return res.json();\n          })\n          .then(\n            data => {\n              if(data.length === 0) {\n                this.setState({errorMessage: 'No matches found'});\n              }\n              this.setState({\n                output: data,\n                isLoaded: true\n              })\n            }\n          )\n        .catch(\n          error => console.log(error)\n        )\n      }\n\n      setTimeout(getResults, 1000);\n    }\n  }\n\n  render() {\n    let loading = this.state.isLoaded ? <Output output={this.state.output} /> : <Loader />\n    return (\n      <div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-10 offset-sm-1\">\n              <Header />\n              <Input handleChange={this.onHandleChange} handleSubmit={this.onSubmit} />\n            </div>\n          </div>\n          {loading}\n          <Message errorMessage={this.state.errorMessage} />\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}